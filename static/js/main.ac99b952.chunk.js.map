{"version":3,"sources":["ressources/icone_yt.png","index_style.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","padding","spacing","height","boxSizing","h1","color","marginLeft","mainTitle","display","alignItems","labelTextfield","textField","form","flexWrap","width","marginBottom","margin","buttons","select","content","title","marginRight","divider","background","item","maxWidth","img","description","fontSize","fontStyle","itemsContainer","overflow","YoutubeViewer","classes","APIKey","React","useState","videoDefinition","setVideoDefinition","videoDuration","setVideoDuration","videoType","setVideoType","order","setOrder","type","setType","query","setQuery","publishedBefore","setPublishedBefore","publishedAfter","setPublishedAfter","maxResults","setMaxResults","items","setItems","queryParam","parameters","params","Object","keys","reduce","acc","key","buildQueryParam","useEffect","gapi","load","auth2","init","client_id","loadClient","client","setApiKey","then","console","log","err","error","className","src","logo","alt","noValidate","autoComplete","TextField","label","disabled","value","InputLabelProps","FormControl","InputLabel","Select","onChange","event","target","map","index","MenuItem","required","placeholder","parseInt","shrink","Button","variant","onClick","getAuthInstance","signIn","scope","length","fetch","encodeURI","method","response","json","data","catch","e","snippet","channelId","channelTitle","publishedAt","thumbnails","url","id","videoId","channelUrl","href","default","Tooltip","Divider","Boolean","window","location","hostname","match","createMuiTheme","typography","ReactDOM","render","StrictMode","ThemeProvider","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ac99b952.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icone_yt.f95e2f43.png\";","\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => {\r\n\r\n    return createStyles({\r\n        root: {\r\n            padding: theme.spacing(2),\r\n            height: \"100%\",\r\n            boxSizing: \"border-box\"\r\n            // background: \"#181818\",\r\n            // color: \"white\"\r\n        },\r\n        h1: {\r\n            color: \"#f00\",\r\n            marginLeft: theme.spacing(1)\r\n        },\r\n        mainTitle: {\r\n            display: \"flex\",\r\n            alignItems: \"center\"\r\n        },\r\n        labelTextfield: {\r\n            // color: \"white\"\r\n        },\r\n        textField: {\r\n\r\n        },\r\n        form: {\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            width: \"50%\",\r\n            marginBottom: 20,\r\n            '& > *': {\r\n                margin: theme.spacing(2),\r\n                display: 'block',\r\n                width: 200\r\n            }\r\n        },\r\n        buttons: {\r\n            '& > *': {\r\n                marginBottom: theme.spacing(1),\r\n                display: 'block'\r\n            }\r\n        },\r\n        select: {\r\n            width: \"100%\"\r\n        },\r\n        content: {\r\n            display: \"flex\",\r\n            margin: theme.spacing(2)\r\n        },\r\n        title: {\r\n            color: \"black\",\r\n            marginRight: theme.spacing(3),\r\n            \"&:hover\": {\r\n                color: \"#1976d2\"\r\n            }\r\n        },\r\n        divider: {\r\n            background: \"rgba(0, 0, 0, 0.5)\"\r\n        },\r\n        item: {\r\n            maxWidth: \"60%\"\r\n        },\r\n        img: {\r\n            marginRight: theme.spacing(1)\r\n        },\r\n        description: {\r\n            fontSize: \"90%\",\r\n            fontStyle: \"italic\"\r\n        },\r\n        itemsContainer: {\r\n            overflow: \"auto\",\r\n            height: \"calc(100% - 400px)\"\r\n        }\r\n    })\r\n})","import React from 'react';\nimport {\n  TextField, Button, Select, MenuItem, InputLabel,\n  FormControl, Divider, Tooltip\n} from \"@material-ui/core\"\nimport { useStyles } from \"./index_style\"\nimport { gapi } from 'gapi-script'\nimport logo from \"./ressources/icone_yt.png\"\nimport { Parameter, Order, Type, VideoDefinition, VideoDuration, VideoType, Items } from \"./types\"\n\n\nconst YoutubeViewer: React.FunctionComponent = () => {\n\n  const classes = useStyles()\n\n  const client_id = \"683810451147-voq0q3nojfijnpi32jb0j3j12k6ljiep.apps.googleusercontent.com\"\n  const APIKey = \"AIzaSyCdchR9POpfapXmIqo1GtjwJ13z6S3qstg\"\n\n  const [videoDefinition, setVideoDefinition] = React.useState<VideoDefinition>(\"any\")\n  const handleChangeVideoDefinition = (event: React.ChangeEvent<{ value: string | unknown }>) => {\n    setVideoDefinition(event.target.value as VideoDefinition)\n  };\n  const [videoDuration, setVideoDuration] = React.useState<VideoDuration>(\"any\")\n  const handleChangeVideoDuration = (event: React.ChangeEvent<{ value: string | unknown }>) => {\n    setVideoDuration(event.target.value as VideoDuration)\n  };\n  const [videoType, setVideoType] = React.useState<VideoType>(\"any\")\n  const handleChangeVideoType = (event: React.ChangeEvent<{ value: string | unknown }>) => {\n    setVideoType(event.target.value as VideoType)\n  };\n  const [order, setOrder] = React.useState<Order>(\"viewCount\")\n  const handleChangeOrder = (event: React.ChangeEvent<{ value: string | unknown }>) => {\n    setOrder(event.target.value as Order)\n  };\n  const [type, setType] = React.useState<Type>(\"video\")\n  const handleChangeType = (event: React.ChangeEvent<{ value: string | unknown }>) => {\n    setType(event.target.value as Type)\n  };\n  const [query, setQuery] = React.useState(\"akram\")\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n  const [publishedBefore, setPublishedBefore] = React.useState(\"2020-04-22\")\n  const handleChangePublishedBefore = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPublishedBefore(event.target.value)\n  }\n  const [publishedAfter, setPublishedAfter] = React.useState(\"2018-07-22\")\n  const handleChangePublishedAfter = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPublishedAfter(event.target.value)\n  }\n  const [maxResults, setMaxResults] = React.useState(30)\n  const handleChangeMaxResults = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setMaxResults(parseInt(event.target.value))\n  }\n\n  const [items, setItems] = React.useState<Array<Items>>([])\n\n\n  const parameters: Parameter = {\n    \"part\": \"snippet\",\n    \"q\": query,\n    \"order\": order,\n    \"type\": type,\n    \"videoDefinition\": videoDefinition,\n    \"videoDuration\": videoDuration,\n    \"videoType\": videoType,\n    \"maxResults\": maxResults,\n    \"regionCode\": \"FR\",\n    \"safeSearch\": \"none\",\n    \"eventType\": \"completed\",\n    // \"channelType\": \"any\"\n    // \"publishedBefore\": publishedBefore,\n    // \"publishedAfter\": publishedAfter\n  }\n\n  const orders: Order[] = [\"date\", \"rating\", \"viewCount\", \"relevance\", \"title\", \"videoCount\"]\n  const types: Type[] = [\"video\", \"playlist\", \"channel\"]\n  const videoDefinitions: VideoDefinition[] = [\"any\", \"high\", \"standard\"]\n  const videoDurations: VideoDuration[] = [\"any\", \"long\", \"medium\", \"short\"]\n  const videoTypes: VideoType[] = [\"any\", \"episode\", \"movie\"]\n\n\n  const buildQueryParam = (parameters: Parameter) => {\n    const keys = Object.keys(parameters)\n    const params = keys.reduce((acc, key) => {\n      return `${acc}&${key}=${parameters[key as keyof Parameter]}`\n    }, \"\")\n    return `?key=${APIKey}${params}`\n  }\n\n  const url = \"https://content.googleapis.com/youtube/v3/search\"\n  const queryParam = buildQueryParam(parameters)\n\n  React.useEffect(() => {\n    gapi.load(\"client:auth2\", () => {\n      gapi.auth2.init({ client_id });\n    });\n  }, [])\n\n\n  const authenticate = () => {\n    console.log(gapi)\n    return gapi.auth2.getAuthInstance()\n      .signIn({ scope: \"https://www.googleapis.com/auth/youtube.force-ssl\" })\n      .then(() => {\n        console.log(\"Sign-in successful\")\n      },\n        (err: string) => {\n          console.error(\"Error signing in\", err)\n        });\n  }\n\n  const loadClient = () => {\n    gapi.client.setApiKey(APIKey);\n    return gapi.client.load(\"https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest\")\n      .then(() => {\n        console.log(\"GAPI client loaded for API\")\n      },\n        (err: string) => {\n          console.error(\"Error loading GAPI client for API\", err)\n        });\n  }\n\n  const execute = () => {\n    fetch(encodeURI(url + queryParam), { method: \"GET\" }).then(response => {\n      console.log(\"Response\", response)\n      return response.json()\n    })\n      .then(data => {\n        return setItems(data.items)\n      })\n      .catch(err => {\n        console.error(\"Error fetching query\", err)\n      })\n\n    // fetch(\"https://www.googleapis.com/youtube/v3/videos\").then(res => {\n    //   console.log(res)\n    // })\n    // return gapi.client.youtube.search.list(parameters)\n    //   .then((response: any) => {\n    //     // Handle the results here (response.result has the parsed body).\n    //     console.log(\"Response\", response);\n    //       return response.result\n    //   },\n    //     (err: string) => {\n    //       console.error(\"Execute error\", err)\n    //     })\n    //     .then((data: any) => {\n    //       return setItems(data.items)\n    //     });\n  }\n\n  const authorizeAndLoad = () => {\n    authenticate().then(loadClient)\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.mainTitle}>\n        <img src={logo} alt=\"youtube\" height={30} />\n        <h1 className={classes.h1}>Recherche Youtube</h1>\n      </div>\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <TextField label=\"part\" disabled value={\"snippet\"} className={classes.textField} InputLabelProps={{ classes: { root: classes.labelTextfield } }} />\n        <FormControl>\n          <InputLabel>order</InputLabel>\n          <Select value={order} onChange={handleChangeOrder} className={classes.select}>\n            {orders.map((order, index) => <MenuItem key={index} value={order}>{order}</MenuItem>)}\n          </Select>\n        </FormControl>\n        <TextField required label=\"query\" placeholder=\"string\" value={query} onChange={handleChangeQuery} className={classes.textField} InputLabelProps={{ classes: { root: classes.labelTextfield } }} />\n        <TextField label=\"maxResults\" value={maxResults} type=\"number\" onChange={handleChangeMaxResults} className={classes.textField} InputLabelProps={{ classes: { root: classes.labelTextfield } }} />\n        <TextField label=\"publishedBefore\" type=\"date\" placeholder=\"1970-01-01T00:00:00Z\" value={publishedBefore} onChange={handleChangePublishedBefore}\n          className={classes.textField}\n          InputLabelProps={{ shrink: true, classes: { root: classes.labelTextfield } }} />\n        <TextField label=\"publishedAfter\" type=\"date\" placeholder=\"1970-01-01T00:00:00Z\" value={publishedAfter} onChange={handleChangePublishedAfter}\n          className={classes.textField}\n          InputLabelProps={{ shrink: true, classes: { root: classes.labelTextfield } }} />\n        <FormControl>\n          <InputLabel>type</InputLabel>\n          <Select value={type} onChange={handleChangeType} className={classes.select}>\n            {types.map((type, index) => <MenuItem key={index} value={type}>{type}</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel>videoDefinition</InputLabel>\n          <Select value={videoDefinition} onChange={handleChangeVideoDefinition} className={classes.select}>\n            {videoDefinitions.map((videoDefinition, index) => <MenuItem key={index} value={videoDefinition}>{videoDefinition}</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel>videoType</InputLabel>\n          <Select value={videoType} onChange={handleChangeVideoType} className={classes.select}>\n            {videoTypes.map((videoType, index) => <MenuItem key={index} value={videoType}>{videoType}</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <InputLabel>videoDuration</InputLabel>\n          <Select value={videoDuration} onChange={handleChangeVideoDuration} className={classes.select}>\n            {videoDurations.map((videoDuration, index) => <MenuItem key={index} value={videoDuration}>{videoDuration}</MenuItem>)}\n          </Select>\n        </FormControl>\n      </form>\n      <div className={classes.buttons}>\n        <Button color=\"secondary\" variant=\"contained\" onClick={authorizeAndLoad}>authorize and load</Button>\n        <Button disabled={query.length < 2} color=\"primary\" variant=\"contained\" onClick={execute}>execute</Button>\n      </div>\n      <div className={classes.itemsContainer}>\n        {items && items.map((e, index) => {\n          const { channelId, channelTitle, description, publishedAt, thumbnails, title } = e.snippet\n          const url = \"https://www.youtube.com/watch?v=\" + e.id.videoId\n          const channelUrl = \"https://www.youtube.com/channel/\" + channelId\n          return (\n            <div className={classes.item} key={index}>\n              <div className={classes.content}>\n                <a href={url}><img src={thumbnails.default.url} alt=\"img\" className={classes.img} /></a>\n                <div>\n                  <a href={url} className={classes.title}><h3>{title}</h3></a>\n                  <Tooltip title={`Go to channel ${channelTitle}`}>\n                    <a href={channelUrl} className={classes.title}>\n                      {channelTitle}\n                    </a>\n                  </Tooltip>\n                  {publishedAt}\n                  <div className={classes.description}>{description}</div>\n                </div>\n              </div>\n              <Divider className={classes.divider} />\n            </div>\n          )\n        })}\n      </div>\n    </div >\n  );\n}\n\nexport default YoutubeViewer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport * as serviceWorker from './serviceWorker';\n\n\n\nconst theme = createMuiTheme({\n  typography: {\n\n  },\n})\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}